import { Link as LinkExtension } from "@tiptap/extension-link";
import Paragraph from "@tiptap/extension-paragraph";
import Placeholder from "@tiptap/extension-placeholder";
import TaskItem from "@tiptap/extension-task-item";
import TaskList from "@tiptap/extension-task-list";
import Text from "@tiptap/extension-text";
import { EditorContent, useEditor } from "@tiptap/react";
import StarterKit from "@tiptap/starter-kit";
import Head from "next/head";
import { useRef, useState } from "react";
import EditorButtonGroup from "~/components/EditorButtonGroup";
import Avatar from "~/components/icons/Avatar";
import ChevronRight from "~/components/icons/ChevronRight";
import Ellipse from "~/components/icons/Ellipse";
import Enter from "~/components/icons/Enter";
import FrontendTag from "~/components/icons/FrontendTag";
import Priority from "~/components/icons/Priority";
import Project from "~/components/icons/Project";
import Tag from "~/components/icons/Tag";
import Combobox from "~/components/ui/combobox";
import DatePicker from "~/components/ui/datepicker";
import { Separator } from "~/components/ui/separator";
import { Textarea } from "~/components/ui/textarea";
import useAutosizeTextArea from "~/hooks/useAutoResizeTextArea";
import { SmilieReplacer } from "~/plugins/SmileyReplacer";

export default function Home() {
  const textAreaRef = useRef<HTMLTextAreaElement>(null);
  const [title, setTitle] = useState<string>("");

  useAutosizeTextArea(textAreaRef.current, title);

  const editor = useEditor({
    extensions: [
      StarterKit.configure({
        bulletList: {
          keepMarks: true,
          keepAttributes: false,
        },
        orderedList: {
          keepMarks: true,
          keepAttributes: false,
        },
      }),
      Placeholder.configure({
        placeholder: "Describe this task",
      }),
      LinkExtension.configure({
        openOnClick: true,
        HTMLAttributes: {
          target: "_blank",
          rel: "noopener noreferrer",
        },
        linkOnPaste: true,
        validate(url) {
          return (
            url.startsWith("http://") ||
            url.startsWith("https://") ||
            url.startsWith("mailto://")
          );
        },
      }),
      TaskList,
      Text,
      Paragraph,
      TaskItem,
      SmilieReplacer,
    ],
    editorProps: {
      attributes: {
        class: "prose focus:outline-none",
      },
    },
    // content: initialPageBody,
    onTransaction: (props) => {
      localStorage.setItem(
        "currentCursor",
        props.transaction.selection.anchor.toString(),
      );
    },
  });

  return (
    <>
      <Head>
        <title>Dimension Assignment</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="scrollbar-hide flex min-h-screen flex-col items-center justify-center">
        <div
          className="flex h-auto min-h-[16.9375rem] w-fit min-w-[44.875rem] flex-col rounded-[0.625rem] bg-white text-[#6C6F75]"
          style={{
            boxShadow: "2px 2px 30px 10px rgba(0, 0, 0, 0.20)",
          }}
        >
          <div className="header mb-6 flex items-center gap-0.5 px-4 pt-4">
            <div className="flex items-center gap-1 rounded-sm bg-[#F5F5F550] px-2 py-1.5">
              <FrontendTag />
              <p className="text-sm font-medium">Frontend</p>
            </div>
            <ChevronRight />
            <p className="text-sm font-medium">New Task</p>
          </div>
          <div className="inputs mb-7 px-4">
            <Textarea
              placeholder="Task Title"
              className="h-auto max-w-full text-base font-medium placeholder:text-[#94989E]"
              ref={textAreaRef}
              value={title}
              onChange={(e) => setTitle(e.target.value)}
            />
            <EditorContent
              editor={editor}
              className="w-full px-3 py-2 text-sm font-medium focus:outline-none focus:ring-0"
              placeholder="Describe this task..."
            />
          </div>
          <div className="mb-5 flex flex-wrap gap-2 px-7">
            <Combobox
              options={[
                {
                  label: (
                    <div className="flex items-center justify-start gap-1">
                      <Ellipse />
                      <p className="text-xs font-medium text-[#94989E]">Todo</p>
                    </div>
                  ),
                  value: "todo",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Ellipse />
                      <p className="text-xs font-medium text-[#94989E]">
                        In Progress
                      </p>
                    </div>
                  ),
                  value: "inprogress",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Ellipse />
                      <p className="text-xs font-medium text-[#94989E]">Done</p>
                    </div>
                  ),
                  value: "done",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Ellipse />
                      <p className="text-xs font-medium text-[#94989E]">
                        Backlog
                      </p>
                    </div>
                  ),
                  value: "backlog",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Ellipse />
                      <p className="text-xs font-medium text-[#94989E]">
                        Cancelled
                      </p>
                    </div>
                  ),
                  value: "cancelled",
                },
              ]}
              initialButtonText={
                <div className="flex items-center gap-1">
                  <Ellipse />
                  <p className="text-xs font-medium text-[#94989E]">Todo</p>
                </div>
              }
            />
            <Combobox
              options={[
                {
                  label: (
                    <div className="flex items-center justify-start gap-1">
                      <Avatar />
                      <p className="text-xs font-medium text-[#94989E]">
                        Ronit
                      </p>
                    </div>
                  ),
                  value: "ronit",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Avatar />
                      <p className="text-xs font-medium text-[#94989E]">
                        Tejas
                      </p>
                    </div>
                  ),
                  value: "tejas",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Avatar />
                      <p className="text-xs font-medium text-[#94989E]">
                        Vansita
                      </p>
                    </div>
                  ),
                  value: "vansita",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Avatar />
                      <p className="text-xs font-medium text-[#94989E]">Yash</p>
                    </div>
                  ),
                  value: "yash",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Avatar />
                      <p className="text-xs font-medium text-[#94989E]">
                        Ayush
                      </p>
                    </div>
                  ),
                  value: "ayush",
                },
              ]}
              initialButtonText={
                <div className="flex items-center gap-1">
                  <Avatar />
                  <p className="text-xs font-medium text-[#94989E]">Assignee</p>
                </div>
              }
            />
            <Combobox
              options={[
                {
                  label: (
                    <div className="flex items-center justify-start gap-1">
                      <Priority />
                      <p className="text-xs font-medium text-[#94989E]">
                        Urgent
                      </p>
                    </div>
                  ),
                  value: "urgent",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Priority />
                      <p className="text-xs font-medium text-[#94989E]">High</p>
                    </div>
                  ),
                  value: "high",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Priority />
                      <p className="text-xs font-medium text-[#94989E]">
                        Medium
                      </p>
                    </div>
                  ),
                  value: "medium",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Priority />
                      <p className="text-xs font-medium text-[#94989E]">Low</p>
                    </div>
                  ),
                  value: "low",
                },
              ]}
              initialButtonText={
                <div className="flex items-center gap-1">
                  <Priority />
                  <p className="text-xs font-medium text-[#94989E]">Priority</p>
                </div>
              }
            />
            <Combobox
              options={[
                {
                  label: (
                    <div className="flex items-center justify-start gap-1">
                      <Tag />
                      <p className="text-xs font-medium text-[#94989E]">Bug</p>
                    </div>
                  ),
                  value: "bug",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Tag />
                      <p className="text-xs font-medium text-[#94989E]">
                        Feature
                      </p>
                    </div>
                  ),
                  value: "feature",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Tag />
                      <p className="text-xs font-medium text-[#94989E]">
                        Improvement
                      </p>
                    </div>
                  ),
                  value: "improvement",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Tag />
                      <p className="text-xs font-medium text-[#94989E]">
                        Chore
                      </p>
                    </div>
                  ),
                  value: "chore",
                },
              ]}
              initialButtonText={
                <div className="flex items-center gap-1">
                  <Tag />
                  <p className="text-xs font-medium text-[#94989E]">Tag</p>
                </div>
              }
            />
            <Combobox
              options={[
                {
                  label: (
                    <div className="flex items-center justify-start gap-1">
                      <Project />
                      <p className="text-xs font-medium text-[#94989E]">
                        Project-1
                      </p>
                    </div>
                  ),
                  value: "project-1",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Project />
                      <p className="text-xs font-medium text-[#94989E]">
                        Project-2
                      </p>
                    </div>
                  ),
                  value: "project-2",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Project />
                      <p className="text-xs font-medium text-[#94989E]">
                        Project-3
                      </p>
                    </div>
                  ),
                  value: "project-3",
                },
                {
                  label: (
                    <div className="flex items-center gap-1">
                      <Project />
                      <p className="text-xs font-medium text-[#94989E]">
                        Project-4
                      </p>
                    </div>
                  ),
                  value: "project-4",
                },
              ]}
              initialButtonText={
                <div className="flex items-center gap-1">
                  <Project />
                  <p className="text-xs font-medium text-[#94989E]">Project</p>
                </div>
              }
            />
            <DatePicker />
          </div>
          <Separator />
          <div className="my-4 flex items-center justify-between px-7">
            <div className="flex gap-1">
              <EditorButtonGroup editor={editor} />
            </div>

            <button
              className="rounded-lg border-none bg-[#533BE5] px-3 text-white transition-all duration-150 hover:bg-[#3F2ABD]"
              style={{
                boxShadow: "0px 3px 0px 0px #3F2ABD",
              }}
            >
              <div className="flex items-center">
                <span>Create</span>
                <Separator
                  className="mx-2 h-10 bg-white/20"
                  orientation="vertical"
                />
                <Enter />
              </div>
            </button>
          </div>
        </div>
      </main>
    </>
  );
}
